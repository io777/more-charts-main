version: "3.9"
services:
    traefik:
        image: traefik:2.4
        command:
            --providers.docker=true
            --providers.docker.exposedByDefault=false
            --entryPoints.http.address=:80
        ports:
            - "80:80"
        networks:
            - traefik-public
            - default
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro
        labels:
            - traefik.enable=true
            - traefik.docker.network=traefik-public
    
    frontend:
        build: 
            context: frontend/docker/development/nginx
        networks:
            - traefik-public
            - default
        labels:
            - traefik.enable=true
            - traefik.docker.network=traefik-public
            - traefik.http.routers.frontend.rule=Host(`localhost`) || Host(`www.localhost`)
            - traefik.http.routers.frontend.entryPoints=http
            - traefik.http.services.frontend.loadBalancer.server.port=80
            - traefik.http.middlewares.frontend-redirect.redirectRegex.regex=^(https?://)www.localhost/(.*)$$
            - traefik.http.middlewares.frontend-redirect.redirectRegex.replacement=$${1}localhost/$${2}
            - traefik.http.middlewares.frontend-redirect.redirectRegex.permanent=true
            - traefik.http.routers.frontend.middlewares=frontend-redirect        
        depends_on:
            - frontend-node
    
    frontend-node:
        build:
            context: frontend
            dockerfile: docker/development/node/Dockerfile
        volumes:
            - ./frontend:/app
        depends_on:
            - api-src    

    api:
        build: 
            context: api/docker/development/nginx
        networks:
            - traefik-public
            - default
        labels:
            - traefik.enable=true
            - traefik.docker.network=traefik-public
            - traefik.http.routers.api.rule=Host(`api.localhost`)
            - traefik.http.routers.api.entryPoints=http
            - traefik.http.services.api.loadBalancer.server.port=80        
        depends_on:
            - api-src
    
    api-src:
        build: 
            context: api
            dockerfile: docker/development/src/Dockerfile
        volumes:
            - ./api:/app
        env_file:
            - .env
        depends_on:
            - postgres

    postgres:
        image: postgres:alpine
        volumes:
            - ./db/db-dump:/dump
            - ./db/db-data:/var/lib/postgresql/data
        environment:
            POSTGRES_USER: /run/secrets/sql_user
            POSTGRES_PASSWORD: /run/secrets/sql_password
            POSTGRES_DB: /run/secrets/sql_database
    
    cucumber-node-cli:
        build:
            context: cucumber
            dockerfile: docker/development/node/Dockerfile
        volumes:
            - ./cucumber:/app
        networks:
            - traefik-public
            - default
        network_mode: service:traefik

secrets:
    sql_user:
        file: ./docker/development/secrets/sql_user
    sql_password:
        file: ./docker/development/secrets/sql_password
    sql_database:
        file: ./docker/development/secrets/sql_database

networks:
    traefik-public:
        name: traefik-public
